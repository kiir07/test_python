# Попробуем решить задачу в лоб - просто будем перебирать все позиции в строке и, если на этой позиции стоит нечетное число, будем удалять его.

numbers = list(map(int, input().split()))
for i in range(len(numbers)):
    if numbers[i] % 2 != 0:
        numbers.pop(i)
print(' '.join(map(str, numbers)))

# Такое решение будет работать неправильно в ситуации,
# когда в списке есть хоть одно нечетное число.
# Это связано с тем, что объект без названия с типом iterable и
# значением range(len(numbers)) сгенерируется один раз, когда интерпретатор
# впервые дойдет до этого места и уже никогда не изменится. Если в процессе мы
# выкинем из списка numbers хоть одно значение, то в процессе перебора всех индексов
# выйдем за пределы нашего списка. range, используемый в for,
# не будет менять свое значение если в процессе работы изменились параметры функции range.

# Решение можно переписать с помощью while:


numbers = list(map(int, input().split()))
i = 0
while i < len(numbers):
    if numbers[i] % 2 != 0:
        numbers.pop(i)
    else:
        i += 1
print(' '.join(map(str, numbers)))

Такое решение будет работать, но оно не очень эффективно.
# Каждый раз при удалении элемента нам придется совершать количество операций,
# пропорциональное длине списка. Итоговое количество операций в
# худшем случае будет пропорционально квадрату количества элементов в списке.

# В случае, если нет очень строгого ограничения в памяти, в задачах,
# где нужно удалить часть элементов списка гораздо проще создать новый список,
# в который нужно добавлять только подходящие элементы.

numbers = list(map(int, input().split()))
newList = []
for i in range(len(numbers)):
    if numbers[i] % 2 == 0:
        newList.append(numbers[i])
print(' '.join(map(str, newList)))